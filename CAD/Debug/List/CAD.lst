
AVRASM ver. 2.1.30  C:\Users\Cesar\Desktop\CAD\Debug\List\CAD.asm Thu Apr 26 15:09:02 2018

C:\Users\Cesar\Desktop\CAD\Debug\List\CAD.asm(1098): warning: Register r3 already defined by the .DEF directive
C:\Users\Cesar\Desktop\CAD\Debug\List\CAD.asm(1099): warning: Register r4 already defined by the .DEF directive
C:\Users\Cesar\Desktop\CAD\Debug\List\CAD.asm(1100): warning: Register r5 already defined by the .DEF directive
C:\Users\Cesar\Desktop\CAD\Debug\List\CAD.asm(1101): warning: Register r6 already defined by the .DEF directive
C:\Users\Cesar\Desktop\CAD\Debug\List\CAD.asm(1102): warning: Register r7 already defined by the .DEF directive
C:\Users\Cesar\Desktop\CAD\Debug\List\CAD.asm(1103): warning: Register r8 already defined by the .DEF directive
C:\Users\Cesar\Desktop\CAD\Debug\List\CAD.asm(1104): warning: Register r9 already defined by the .DEF directive
C:\Users\Cesar\Desktop\CAD\Debug\List\CAD.asm(1105): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.32a Evaluation
                 ;(C) Copyright 1998-2017 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : AT90USB1286
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 2048 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME AT90USB1286
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR1A=0xC8
                 	.EQU UDR1=0xCE
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x20FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R3
                 	.DEF _i_msb=R4
                 	.DEF _h=R5
                 	.DEF _h_msb=R6
                 	.DEF _j=R7
                 	.DEF _j_msb=R8
                 	.DEF _comacounter=R9
                 	.DEF _comacounter_msb=R10
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0091 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00004c 2710
00004d 03e8
00004e 0064
00004f 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000050 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000051 1000
000052 0100
000053 0010
000054 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000055 0000
000056 0000      	.DB  0x0,0x0,0x0,0x0
000057 0023
000058 0000      	.DB  0x23,0x0,0x0,0x0
                 
                 _0x0:
000059 5441
00005a 0d0a
00005b 4100
00005c 2b54      	.DB  0x41,0x54,0xA,0xD,0x0,0x41,0x54,0x2B
00005d 4743
00005e 5350
00005f 5750
000060 3d52      	.DB  0x43,0x47,0x50,0x53,0x50,0x57,0x52,0x3D
000061 0a31
000062 000d
000063 5441
000064 432b      	.DB  0x31,0xA,0xD,0x0,0x41,0x54,0x2B,0x43
000065 5047
000066 5353
000067 4154
000068 5554      	.DB  0x47,0x50,0x53,0x53,0x54,0x41,0x54,0x55
000069 3f53
00006a 0d0a
00006b 4100
00006c 2b54      	.DB  0x53,0x3F,0xA,0xD,0x0,0x41,0x54,0x2B
00006d 4f43
00006e 5350
00006f 0a3f
000070 000d      	.DB  0x43,0x4F,0x50,0x53,0x3F,0xA,0xD,0x0
000071 5441
000072 432b
000073 474d
000074 3d46      	.DB  0x41,0x54,0x2B,0x43,0x4D,0x47,0x46,0x3D
000075 0a31
000076 000d
000077 5441
000078 432b      	.DB  0x31,0xA,0xD,0x0,0x41,0x54,0x2B,0x43
000079 5047
00007a 4953
00007b 464e
00007c 303d      	.DB  0x47,0x50,0x53,0x49,0x4E,0x46,0x3D,0x30
00007d 0d0a
00007e 4100
00007f 2b54
000080 4d43      	.DB  0xA,0xD,0x0,0x41,0x54,0x2B,0x43,0x4D
000081 5347
000082 253d
000083 3463
000084 3234      	.DB  0x47,0x53,0x3D,0x25,0x63,0x34,0x34,0x32
000085 3037
000086 3138
000087 3938
000088 2537      	.DB  0x37,0x30,0x38,0x31,0x38,0x39,0x37,0x25
000089 0a63
00008a 000d
00008b 6325
C:\Users\Cesar\Desktop\CAD\Debug\List\CAD.asm(1180): warning: .cseg .db misalignment - padding zero byte
00008c 0000      	.DB  0x63,0xA,0xD,0x0,0x25,0x63,0x0
                 
                 __GLOBAL_INI_TBL:
00008d 0008      	.DW  0x08
00008e 0003      	.DW  0x03
00008f 00aa      	.DW  __REG_VARS*2
                 
                 _0xFFFFFFFF:
000090 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000091 94f8      	CLI
000092 27ee      	CLR  R30
000093 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000094 e0f1      	LDI  R31,1
000095 bff5      	OUT  MCUCR,R31
000096 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000097 e08d      	LDI  R24,(14-2)+1
000098 e0a2      	LDI  R26,2
000099 27bb      	CLR  R27
                 __CLEAR_REG:
00009a 93ed      	ST   X+,R30
00009b 958a      	DEC  R24
00009c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00009d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00009e e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00009f e0a0      	LDI  R26,LOW(__SRAM_START)
0000a0 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000a1 93ed      	ST   X+,R30
0000a2 9701      	SBIW R24,1
0000a3 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000a4 e1ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000a5 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000a6 9185      	LPM  R24,Z+
0000a7 9195      	LPM  R25,Z+
0000a8 9700      	SBIW R24,0
0000a9 f061      	BREQ __GLOBAL_INI_END
0000aa 91a5      	LPM  R26,Z+
0000ab 91b5      	LPM  R27,Z+
0000ac 9005      	LPM  R0,Z+
0000ad 9015      	LPM  R1,Z+
0000ae 01bf      	MOVW R22,R30
0000af 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000b0 9005      	LPM  R0,Z+
0000b1 920d      	ST   X+,R0
0000b2 9701      	SBIW R24,1
0000b3 f7e1      	BRNE __GLOBAL_INI_LOOP
0000b4 01fb      	MOVW R30,R22
0000b5 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0000b6 bf8b      	OUT  RAMPZ,R24
                 
                 ;GPIOR0 INITIALIZATION
0000b7 e0e0      	LDI  R30,__GPIOR0_INIT
0000b8 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000b9 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000ba bfed      	OUT  SPL,R30
0000bb e2e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000bc bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000bd e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000be e0d9      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000bf 940c 00c1 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x900
                 
                 	.CSEG
                 ;/*
                 ; * CAD.c
                 ; *
                 ; * Created: 10/04/2018 02:16:17 p. m.
                 ; * Author: Cesar
                 ; */
                 ;
                 ;#include <90usb1286.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <io.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;int i=0,h=0,j=35;
                 ;int comacounter = 0;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0012 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0013 char dato;
                 ; 0000 0014 char resp;
                 ; 0000 0015 char GPS [254];
                 ; 0000 0016 char car;
                 ; 0000 0017 char quotes = '"';
                 ; 0000 0018 int pressed =0;
                 ; 0000 0019 
                 ; 0000 001A 
                 ; 0000 001B 
                 ; 0000 001C 
                 ; 0000 001D     // USART1 initialization
                 ; 0000 001E     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 001F     // USART1 Receiver: On
                 ; 0000 0020     // USART1 Transmitter: On
                 ; 0000 0021     // USART1 Mode: Asynchronous
                 ; 0000 0022     // USART1 Baud Rate: 9600
                 ; 0000 0023     UCSR1A=(0<<RXC1) | (0<<TXC1) | (0<<UDRE1) | (0<<FE1) | (0<<DOR1) | (0<<UPE1) | (0<<U2X1) | (0<<MPCM1);
0000c1 97ef      	SBIW R28,63
0000c2 97ef      	SBIW R28,63
0000c3 97ef      	SBIW R28,63
0000c4 97ef      	SBIW R28,63
0000c5 9722      	SBIW R28,2
                 ;	dato -> R17
                 ;	resp -> R16
                 ;	GPS -> Y+0
                 ;	car -> R19
                 ;	quotes -> R18
                 ;	pressed -> R20,R21
0000c6 e222      	LDI  R18,34
                +
0000c7 e040     +LDI R20 , LOW ( 0 )
0000c8 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0000c9 e0e0      	LDI  R30,LOW(0)
0000ca 93e0 00c8 	STS  200,R30
                 ; 0000 0024     UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (1<<RXEN1) | (1<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
0000cc e1e8      	LDI  R30,LOW(24)
0000cd 93e0 00c9 	STS  201,R30
                 ; 0000 0025     UCSR1C=(0<<UMSEL11) | (0<<UMSEL10) | (0<<UPM11) | (0<<UPM10) | (0<<USBS1) | (1<<UCSZ11) | (1<<UCSZ10) | (0<<UCPOL1);
0000cf e0e6      	LDI  R30,LOW(6)
0000d0 93e0 00ca 	STS  202,R30
                 ; 0000 0026     UBRR1H=0x00;
0000d2 e0e0      	LDI  R30,LOW(0)
0000d3 93e0 00cd 	STS  205,R30
                 ; 0000 0027     UBRR1L=0x0C;
0000d5 e0ec      	LDI  R30,LOW(12)
0000d6 93e0 00cc 	STS  204,R30
                 ; 0000 0028 
                 ; 0000 0029 
                 ; 0000 002A 
                 ; 0000 002B DDRC.7=0;
0000d8 983f      	CBI  0x7,7
                 ; 0000 002C PORTC.7=1;
0000d9 9a47      	SBI  0x8,7
                 ; 0000 002D DDRC.6=0;
0000da 983e      	CBI  0x7,6
                 ; 0000 002E PORTC.6=1;
0000db 9a46      	SBI  0x8,6
                 ; 0000 002F DDRC.5=1;
0000dc 9a3d      	SBI  0x7,5
                 ; 0000 0030 DDRC.4=1;
0000dd 9a3c      	SBI  0x7,4
                 ; 0000 0031 
                 ; 0000 0032 
                 ; 0000 0033 
                 ; 0000 0034 
                 ; 0000 0035    printf("AT\n\r");
                +
0000de ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000df e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000e0 d211      	RCALL SUBOPT_0x0
                 ; 0000 0036 
                 ; 0000 0037     //delay_ms(100);
                 ; 0000 0038        dato =getchar();
0000e1 2f1e      	MOV  R17,R30
                 ; 0000 0039 
                 ; 0000 003A 
                 ; 0000 003B     while(dato != 'O')
                 _0xF:
0000e2 341f      	CPI  R17,79
0000e3 f041      	BREQ _0x11
                 ; 0000 003C     {
                 ; 0000 003D 
                 ; 0000 003E         delay_ms(100);
0000e4 d213      	RCALL SUBOPT_0x1
                 ; 0000 003F         i++;
                +
0000e5 0e3e     +ADD R3 , R30
0000e6 1e4f     +ADC R4 , R31
                 	__ADDWRR 3,4,30,31
                 ; 0000 0040         if(i>=5)
0000e7 e0e5      	LDI  R30,LOW(5)
0000e8 e0f0      	LDI  R31,HIGH(5)
0000e9 163e      	CP   R3,R30
0000ea 064f      	CPC  R4,R31
0000eb f3b4      	BRLT _0xF
                 ; 0000 0041         {
                 ; 0000 0042             break;
                 ; 0000 0043         }
                 ; 0000 0044     }
                 _0x11:
                 ; 0000 0045 
                 ; 0000 0046 
                 ; 0000 0047     printf("AT+CGPSPWR=1\n\r");
                +
0000ec ebe7     +LDI R30 , LOW ( 2 * _0x0 + ( 5 ) )
0000ed e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW1FN _0x0,5
0000ee d203      	RCALL SUBOPT_0x0
                 ; 0000 0048 
                 ; 0000 0049    resp = getchar();
0000ef 2f0e      	MOV  R16,R30
                 ; 0000 004A 
                 ; 0000 004B 
                 ; 0000 004C     while(resp != 'O')
                 _0x13:
0000f0 340f      	CPI  R16,79
0000f1 f041      	BREQ _0x15
                 ; 0000 004D     {
                 ; 0000 004E         delay_ms(100);
0000f2 d205      	RCALL SUBOPT_0x1
                 ; 0000 004F         h++;
                +
0000f3 0e5e     +ADD R5 , R30
0000f4 1e6f     +ADC R6 , R31
                 	__ADDWRR 5,6,30,31
                 ; 0000 0050         if(h>=5)
0000f5 e0e5      	LDI  R30,LOW(5)
0000f6 e0f0      	LDI  R31,HIGH(5)
0000f7 165e      	CP   R5,R30
0000f8 066f      	CPC  R6,R31
0000f9 f3b4      	BRLT _0x13
                 ; 0000 0051         {
                 ; 0000 0052             break;
                 ; 0000 0053         }
                 ; 0000 0054     }
                 _0x15:
                 ; 0000 0055 
                 ; 0000 0056     printf("AT+CGPSSTATUS?\n\r");
                +
0000fa ece6     +LDI R30 , LOW ( 2 * _0x0 + ( 20 ) )
0000fb e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW1FN _0x0,20
0000fc d201      	RCALL SUBOPT_0x2
                 ; 0000 0057 
                 ; 0000 0058     delay_ms(100);
                 ; 0000 0059 
                 ; 0000 005A     printf("AT+COPS?\n\r");
                +
0000fd ede7     +LDI R30 , LOW ( 2 * _0x0 + ( 37 ) )
0000fe e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 37 ) )
                 	__POINTW1FN _0x0,37
0000ff d1fe      	RCALL SUBOPT_0x2
                 ; 0000 005B     delay_ms(100);
                 ; 0000 005C     printf("AT+CMGF=1\n\r");
                +
000100 eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 48 ) )
000101 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 48 ) )
                 	__POINTW1FN _0x0,48
000102 d203      	RCALL SUBOPT_0x3
                 ; 0000 005D 
                 ; 0000 005E 
                 ; 0000 005F   PORTC.5=1;
000103 9a45      	SBI  0x8,5
                 ; 0000 0060 
                 ; 0000 0061 while (1)
                 _0x19:
                 ; 0000 0062     {
                 ; 0000 0063 
                 ; 0000 0064 
                 ; 0000 0065 
                 ; 0000 0066 
                 ; 0000 0067     if(PINC.7==0 && pressed == 0)
000104 9937      	SBIC 0x6,7
000105 c004      	RJMP _0x1D
000106 2400      	CLR  R0
000107 1604      	CP   R0,R20
000108 0605      	CPC  R0,R21
000109 f009      	BREQ _0x1E
                 _0x1D:
00010a c05c      	RJMP _0x1C
                 _0x1E:
                 ; 0000 0068     {
                 ; 0000 0069     delay_ms(200);
00010b eca8      	LDI  R26,LOW(200)
00010c e0b0      	LDI  R27,0
00010d d248      	RCALL _delay_ms
                 ; 0000 006A     pressed = 1;
                +
00010e e041     +LDI R20 , LOW ( 1 )
00010f e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
                 ; 0000 006B 
                 ; 0000 006C     printf("AT+CGPSINF=0\n\r");
                +
000110 eeee     +LDI R30 , LOW ( 2 * _0x0 + ( 60 ) )
000111 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 60 ) )
                 	__POINTW1FN _0x0,60
000112 d1f3      	RCALL SUBOPT_0x3
                 ; 0000 006D 
                 ; 0000 006E     while(comacounter < 4)
                 _0x1F:
000113 e0e4      	LDI  R30,LOW(4)
000114 e0f0      	LDI  R31,HIGH(4)
000115 169e      	CP   R9,R30
000116 06af      	CPC  R10,R31
000117 f4f4      	BRGE _0x21
                 ; 0000 006F     {
                 ; 0000 0070         GPS[h] = getchar();
                +
000118 2de5     +MOV R30 , R5
000119 2df6     +MOV R31 , R6
                 	__GETW1R 5,6
00011a 01de      	MOVW R26,R28
00011b 0fea      	ADD  R30,R26
00011c 1ffb      	ADC  R31,R27
00011d 93ff      	PUSH R31
00011e 93ef      	PUSH R30
00011f d051      	RCALL _getchar
000120 91af      	POP  R26
000121 91bf      	POP  R27
000122 93ec      	ST   X,R30
                 ; 0000 0071         if(GPS[h] == ',')
000123 01de      	MOVW R26,R28
000124 0da5      	ADD  R26,R5
000125 1db6      	ADC  R27,R6
000126 91ac      	LD   R26,X
000127 32ac      	CPI  R26,LOW(0x2C)
000128 f431      	BRNE _0x22
                 ; 0000 0072         {
                 ; 0000 0073          comacounter++;
                +
000129 2de9     +MOV R30 , R9
00012a 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
00012b 9631      	ADIW R30,1
                +
00012c 2e9e     +MOV R9 , R30
00012d 2eaf     +MOV R10 , R31
                 	__PUTW1R 9,10
00012e 9731      	SBIW R30,1
                 ; 0000 0074 
                 ; 0000 0075         }
                 ; 0000 0076         h++;
                 _0x22:
                +
00012f 2de5     +MOV R30 , R5
000130 2df6     +MOV R31 , R6
                 	__GETW1R 5,6
000131 9631      	ADIW R30,1
                +
000132 2e5e     +MOV R5 , R30
000133 2e6f     +MOV R6 , R31
                 	__PUTW1R 5,6
000134 9731      	SBIW R30,1
                 ; 0000 0077 
                 ; 0000 0078     }
000135 cfdd      	RJMP _0x1F
                 _0x21:
                 ; 0000 0079 
                 ; 0000 007A      delay_ms(200);
000136 eca8      	LDI  R26,LOW(200)
000137 e0b0      	LDI  R27,0
000138 d21d      	RCALL _delay_ms
                 ; 0000 007B 
                 ; 0000 007C      printf("AT+CMGS=%c4427081897%c\n\r",quotes,quotes);
                +
000139 efed     +LDI R30 , LOW ( 2 * _0x0 + ( 75 ) )
00013a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 75 ) )
                 	__POINTW1FN _0x0,75
00013b 93fa      	ST   -Y,R31
00013c 93ea      	ST   -Y,R30
00013d d1ce      	RCALL SUBOPT_0x4
00013e d1cd      	RCALL SUBOPT_0x4
00013f e088      	LDI  R24,8
000140 d175      	RCALL _printf
000141 962a      	ADIW R28,10
                 ; 0000 007D      delay_ms(100);
000142 e6a4      	LDI  R26,LOW(100)
000143 e0b0      	LDI  R27,0
000144 d211      	RCALL _delay_ms
                 ; 0000 007E      comacounter=0;
000145 2499      	CLR  R9
000146 24aa      	CLR  R10
                 ; 0000 007F      while(GPS[j] != 0x00)
                 _0x23:
000147 d1ca      	RCALL SUBOPT_0x5
000148 91ec      	LD   R30,X
000149 30e0      	CPI  R30,0
00014a f099      	BREQ _0x25
                 ; 0000 0080      {
                 ; 0000 0081         car =  GPS[j];
00014b d1c6      	RCALL SUBOPT_0x5
00014c 913c      	LD   R19,X
                 ; 0000 0082         printf("%c",car);
                +
00014d e1e6     +LDI R30 , LOW ( 2 * _0x0 + ( 100 ) )
00014e e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 100 ) )
                 	__POINTW1FN _0x0,100
00014f 93fa      	ST   -Y,R31
000150 93ea      	ST   -Y,R30
000151 2fe3      	MOV  R30,R19
000152 27ff      	CLR  R31
000153 2766      	CLR  R22
000154 2777      	CLR  R23
000155 d1fb      	RCALL __PUTPARD1
000156 e084      	LDI  R24,4
000157 d15e      	RCALL _printf
000158 9626      	ADIW R28,6
                 ; 0000 0083 
                 ; 0000 0084             j++;
000159 e0e1      	LDI  R30,LOW(1)
00015a e0f0      	LDI  R31,HIGH(1)
                +
00015b 0e7e     +ADD R7 , R30
00015c 1e8f     +ADC R8 , R31
                 	__ADDWRR 7,8,30,31
                 ; 0000 0085      }
00015d cfe9      	RJMP _0x23
                 _0x25:
                 ; 0000 0086      delay_ms(100);
00015e e6a4      	LDI  R26,LOW(100)
00015f e0b0      	LDI  R27,0
000160 d1f5      	RCALL _delay_ms
                 ; 0000 0087      putchar(0x1A);
000161 e1aa      	LDI  R26,LOW(26)
000162 d015      	RCALL _putchar
                 ; 0000 0088      delay_ms(500);
000163 efa4      	LDI  R26,LOW(500)
000164 e0b1      	LDI  R27,HIGH(500)
000165 d1f0      	RCALL _delay_ms
                 ; 0000 0089      PORTC.4=1;
000166 9a44      	SBI  0x8,4
                 ; 0000 008A 
                 ; 0000 008B         }
                 ; 0000 008C 
                 ; 0000 008D         if(PINC.6==0)
                 _0x1C:
000167 9936      	SBIC 0x6,6
000168 c006      	RJMP _0x28
                 ; 0000 008E         {
                 ; 0000 008F             pressed =0;
                +
000169 e040     +LDI R20 , LOW ( 0 )
00016a e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 0090             j=0;
00016b 2477      	CLR  R7
00016c 2488      	CLR  R8
                 ; 0000 0091             h=0;
00016d 2455      	CLR  R5
00016e 2466      	CLR  R6
                 ; 0000 0092         }
                 ; 0000 0093 
                 ; 0000 0094 
                 ; 0000 0095 
                 ; 0000 0096 
                 ; 0000 0097 }
                 _0x28:
00016f cf94      	RJMP _0x19
                 ; 0000 0098 }
                 _0x29:
000170 cfff      	RJMP _0x29
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 _0x2000003:
000171 91e0 00c8 	LDS  R30,200
000173 78e0      	ANDI R30,LOW(0x80)
000174 f3e1      	BREQ _0x2000003
000175 91e0 00ce 	LDS  R30,206
000177 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
000178 931a      	ST   -Y,R17
000179 2f1a      	MOV  R17,R26
                 _0x2000006:
00017a 91e0 00c8 	LDS  R30,200
00017c 72e0      	ANDI R30,LOW(0x20)
00017d f3e1      	BREQ _0x2000006
00017e 9310 00ce 	STS  206,R17
000180 9119      	LD   R17,Y+
000181 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
000182 d1b2      	RCALL __SAVELOCR4
000183 018d      	MOVW R16,R26
000184 813c      	LDD  R19,Y+4
000185 2fa3      	MOV  R26,R19
000186 dff1      	RCALL _putchar
000187 01d8      	MOVW R26,R16
000188 91ed      	LD   R30,X+
000189 91fd      	LD   R31,X+
00018a 9631      	ADIW R30,1
00018b 93fe      	ST   -X,R31
00018c 93ee      	ST   -X,R30
00018d d1ae      	RCALL __LOADLOCR4
00018e 9625      	ADIW R28,5
00018f 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000190 93ba      	ST   -Y,R27
000191 93aa      	ST   -Y,R26
000192 9726      	SBIW R28,6
000193 d19f      	RCALL __SAVELOCR6
000194 e010      	LDI  R17,0
000195 85ac      	LDD  R26,Y+12
000196 85bd      	LDD  R27,Y+12+1
000197 e0e0      	LDI  R30,LOW(0)
000198 e0f0      	LDI  R31,HIGH(0)
000199 93ed      	ST   X+,R30
00019a 93fc      	ST   X,R31
                 _0x200001C:
00019b 89ea      	LDD  R30,Y+18
00019c 89fb      	LDD  R31,Y+18+1
00019d 9631      	ADIW R30,1
00019e 8bea      	STD  Y+18,R30
00019f 8bfb      	STD  Y+18+1,R31
0001a0 9731      	SBIW R30,1
0001a1 91e4      	LPM  R30,Z
0001a2 2f2e      	MOV  R18,R30
0001a3 30e0      	CPI  R30,0
0001a4 f409      	BRNE PC+2
0001a5 c109      	RJMP _0x200001E
0001a6 2fe1      	MOV  R30,R17
0001a7 30e0      	CPI  R30,0
0001a8 f431      	BRNE _0x2000022
0001a9 3225      	CPI  R18,37
0001aa f411      	BRNE _0x2000023
0001ab e011      	LDI  R17,LOW(1)
0001ac c001      	RJMP _0x2000024
                 _0x2000023:
0001ad d168      	RCALL SUBOPT_0x6
                 _0x2000024:
0001ae c0ff      	RJMP _0x2000021
                 _0x2000022:
0001af 30e1      	CPI  R30,LOW(0x1)
0001b0 f4a1      	BRNE _0x2000025
0001b1 3225      	CPI  R18,37
0001b2 f411      	BRNE _0x2000026
0001b3 d162      	RCALL SUBOPT_0x6
0001b4 c0f8      	RJMP _0x20000D2
                 _0x2000026:
0001b5 e012      	LDI  R17,LOW(2)
0001b6 e040      	LDI  R20,LOW(0)
0001b7 e000      	LDI  R16,LOW(0)
0001b8 322d      	CPI  R18,45
0001b9 f411      	BRNE _0x2000027
0001ba e001      	LDI  R16,LOW(1)
0001bb c0f2      	RJMP _0x2000021
                 _0x2000027:
0001bc 322b      	CPI  R18,43
0001bd f411      	BRNE _0x2000028
0001be e24b      	LDI  R20,LOW(43)
0001bf c0ee      	RJMP _0x2000021
                 _0x2000028:
0001c0 3220      	CPI  R18,32
0001c1 f411      	BRNE _0x2000029
0001c2 e240      	LDI  R20,LOW(32)
0001c3 c0ea      	RJMP _0x2000021
                 _0x2000029:
0001c4 c002      	RJMP _0x200002A
                 _0x2000025:
0001c5 30e2      	CPI  R30,LOW(0x2)
0001c6 f439      	BRNE _0x200002B
                 _0x200002A:
0001c7 e050      	LDI  R21,LOW(0)
0001c8 e013      	LDI  R17,LOW(3)
0001c9 3320      	CPI  R18,48
0001ca f411      	BRNE _0x200002C
0001cb 6800      	ORI  R16,LOW(128)
0001cc c0e1      	RJMP _0x2000021
                 _0x200002C:
0001cd c003      	RJMP _0x200002D
                 _0x200002B:
0001ce 30e3      	CPI  R30,LOW(0x3)
0001cf f009      	BREQ PC+2
0001d0 c0dd      	RJMP _0x2000021
                 _0x200002D:
0001d1 3320      	CPI  R18,48
0001d2 f010      	BRLO _0x2000030
0001d3 332a      	CPI  R18,58
0001d4 f008      	BRLO _0x2000031
                 _0x2000030:
0001d5 c007      	RJMP _0x200002F
                 _0x2000031:
0001d6 e0aa      	LDI  R26,LOW(10)
0001d7 9f5a      	MUL  R21,R26
0001d8 2d50      	MOV  R21,R0
0001d9 2fe2      	MOV  R30,R18
0001da 53e0      	SUBI R30,LOW(48)
0001db 0f5e      	ADD  R21,R30
0001dc c0d1      	RJMP _0x2000021
                 _0x200002F:
0001dd 2fe2      	MOV  R30,R18
0001de 36e3      	CPI  R30,LOW(0x63)
0001df f439      	BRNE _0x2000035
0001e0 d13c      	RCALL SUBOPT_0x7
0001e1 89e8      	LDD  R30,Y+16
0001e2 89f9      	LDD  R31,Y+16+1
0001e3 81a4      	LDD  R26,Z+4
0001e4 93aa      	ST   -Y,R26
0001e5 d13d      	RCALL SUBOPT_0x8
0001e6 c0c6      	RJMP _0x2000036
                 _0x2000035:
0001e7 37e3      	CPI  R30,LOW(0x73)
0001e8 f429      	BRNE _0x2000038
0001e9 d133      	RCALL SUBOPT_0x7
0001ea d13e      	RCALL SUBOPT_0x9
0001eb d0ed      	RCALL _strlen
0001ec 2f1e      	MOV  R17,R30
0001ed c007      	RJMP _0x2000039
                 _0x2000038:
0001ee 37e0      	CPI  R30,LOW(0x70)
0001ef f449      	BRNE _0x200003B
0001f0 d12c      	RCALL SUBOPT_0x7
0001f1 d137      	RCALL SUBOPT_0x9
0001f2 d0f2      	RCALL _strlenf
0001f3 2f1e      	MOV  R17,R30
0001f4 6008      	ORI  R16,LOW(8)
                 _0x2000039:
0001f5 6002      	ORI  R16,LOW(2)
0001f6 770f      	ANDI R16,LOW(127)
0001f7 e030      	LDI  R19,LOW(0)
0001f8 c038      	RJMP _0x200003C
                 _0x200003B:
0001f9 36e4      	CPI  R30,LOW(0x64)
0001fa f011      	BREQ _0x200003F
0001fb 36e9      	CPI  R30,LOW(0x69)
0001fc f411      	BRNE _0x2000040
                 _0x200003F:
0001fd 6004      	ORI  R16,LOW(4)
0001fe c002      	RJMP _0x2000041
                 _0x2000040:
0001ff 37e5      	CPI  R30,LOW(0x75)
000200 f431      	BRNE _0x2000042
                 _0x2000041:
000201 e9e8      	LDI  R30,LOW(_tbl10_G100*2)
000202 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000203 83ee      	STD  Y+6,R30
000204 83ff      	STD  Y+6+1,R31
000205 e015      	LDI  R17,LOW(5)
000206 c00c      	RJMP _0x2000043
                 _0x2000042:
000207 35e8      	CPI  R30,LOW(0x58)
000208 f411      	BRNE _0x2000045
000209 6008      	ORI  R16,LOW(8)
00020a c003      	RJMP _0x2000046
                 _0x2000045:
00020b 37e8      	CPI  R30,LOW(0x78)
00020c f009      	BREQ PC+2
00020d c09f      	RJMP _0x2000077
                 _0x2000046:
00020e eae2      	LDI  R30,LOW(_tbl16_G100*2)
00020f e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000210 83ee      	STD  Y+6,R30
000211 83ff      	STD  Y+6+1,R31
000212 e014      	LDI  R17,LOW(4)
                 _0x2000043:
000213 ff02      	SBRS R16,2
000214 c015      	RJMP _0x2000048
000215 d107      	RCALL SUBOPT_0x7
000216 89a8      	LDD  R26,Y+16
000217 89b9      	LDD  R27,Y+16+1
000218 9614      	ADIW R26,4
000219 91ed      	LD   R30,X+
00021a 91fd      	LD   R31,X+
00021b 87ea      	STD  Y+10,R30
00021c 87fb      	STD  Y+10+1,R31
00021d 85ab      	LDD  R26,Y+11
00021e 23aa      	TST  R26
00021f f422      	BRPL _0x2000049
000220 d124      	RCALL __ANEGW1
000221 87ea      	STD  Y+10,R30
000222 87fb      	STD  Y+10+1,R31
000223 e24d      	LDI  R20,LOW(45)
                 _0x2000049:
000224 3040      	CPI  R20,0
000225 f011      	BREQ _0x200004A
000226 5f1f      	SUBI R17,-LOW(1)
000227 c001      	RJMP _0x200004B
                 _0x200004A:
000228 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
000229 c007      	RJMP _0x200004C
                 _0x2000048:
00022a d0f2      	RCALL SUBOPT_0x7
00022b 89a8      	LDD  R26,Y+16
00022c 89b9      	LDD  R27,Y+16+1
00022d 9614      	ADIW R26,4
00022e d11a      	RCALL __GETW1P
00022f 87ea      	STD  Y+10,R30
000230 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
000231 fd00      	SBRC R16,0
000232 c010      	RJMP _0x200004D
                 _0x200004E:
000233 1715      	CP   R17,R21
000234 f470      	BRSH _0x2000050
000235 ff07      	SBRS R16,7
000236 c008      	RJMP _0x2000051
000237 ff02      	SBRS R16,2
000238 c004      	RJMP _0x2000052
000239 7f0b      	ANDI R16,LOW(251)
00023a 2f24      	MOV  R18,R20
00023b 5011      	SUBI R17,LOW(1)
00023c c001      	RJMP _0x2000053
                 _0x2000052:
00023d e320      	LDI  R18,LOW(48)
                 _0x2000053:
00023e c001      	RJMP _0x2000054
                 _0x2000051:
00023f e220      	LDI  R18,LOW(32)
                 _0x2000054:
000240 d0d5      	RCALL SUBOPT_0x6
000241 5051      	SUBI R21,LOW(1)
000242 cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
000243 2f31      	MOV  R19,R17
000244 ff01      	SBRS R16,1
000245 c016      	RJMP _0x2000055
                 _0x2000056:
000246 3030      	CPI  R19,0
000247 f099      	BREQ _0x2000058
000248 ff03      	SBRS R16,3
000249 c006      	RJMP _0x2000059
00024a 81ee      	LDD  R30,Y+6
00024b 81ff      	LDD  R31,Y+6+1
00024c 9125      	LPM  R18,Z+
00024d 83ee      	STD  Y+6,R30
00024e 83ff      	STD  Y+6+1,R31
00024f c005      	RJMP _0x200005A
                 _0x2000059:
000250 81ae      	LDD  R26,Y+6
000251 81bf      	LDD  R27,Y+6+1
000252 912d      	LD   R18,X+
000253 83ae      	STD  Y+6,R26
000254 83bf      	STD  Y+6+1,R27
                 _0x200005A:
000255 d0c0      	RCALL SUBOPT_0x6
000256 3050      	CPI  R21,0
000257 f009      	BREQ _0x200005B
000258 5051      	SUBI R21,LOW(1)
                 _0x200005B:
000259 5031      	SUBI R19,LOW(1)
00025a cfeb      	RJMP _0x2000056
                 _0x2000058:
00025b c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
00025c e320      	LDI  R18,LOW(48)
00025d 81ee      	LDD  R30,Y+6
00025e 81ff      	LDD  R31,Y+6+1
00025f d0ed      	RCALL __GETW1PF
000260 87e8      	STD  Y+8,R30
000261 87f9      	STD  Y+8+1,R31
000262 81ee      	LDD  R30,Y+6
000263 81ff      	LDD  R31,Y+6+1
000264 9632      	ADIW R30,2
000265 83ee      	STD  Y+6,R30
000266 83ff      	STD  Y+6+1,R31
                 _0x2000060:
000267 85e8      	LDD  R30,Y+8
000268 85f9      	LDD  R31,Y+8+1
000269 85aa      	LDD  R26,Y+10
00026a 85bb      	LDD  R27,Y+10+1
00026b 17ae      	CP   R26,R30
00026c 07bf      	CPC  R27,R31
00026d f050      	BRLO _0x2000062
00026e 5f2f      	SUBI R18,-LOW(1)
00026f 85a8      	LDD  R26,Y+8
000270 85b9      	LDD  R27,Y+8+1
000271 85ea      	LDD  R30,Y+10
000272 85fb      	LDD  R31,Y+10+1
000273 1bea      	SUB  R30,R26
000274 0bfb      	SBC  R31,R27
000275 87ea      	STD  Y+10,R30
000276 87fb      	STD  Y+10+1,R31
000277 cfef      	RJMP _0x2000060
                 _0x2000062:
000278 332a      	CPI  R18,58
000279 f028      	BRLO _0x2000063
00027a ff03      	SBRS R16,3
00027b c002      	RJMP _0x2000064
00027c 5f29      	SUBI R18,-LOW(7)
00027d c001      	RJMP _0x2000065
                 _0x2000064:
00027e 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
00027f fd04      	SBRC R16,4
000280 c019      	RJMP _0x2000067
000281 3321      	CPI  R18,49
000282 f420      	BRSH _0x2000069
000283 85a8      	LDD  R26,Y+8
000284 85b9      	LDD  R27,Y+8+1
000285 9711      	SBIW R26,1
000286 f409      	BRNE _0x2000068
                 _0x2000069:
000287 c009      	RJMP _0x20000D3
                 _0x2000068:
000288 1753      	CP   R21,R19
000289 f010      	BRLO _0x200006D
00028a ff00      	SBRS R16,0
00028b c001      	RJMP _0x200006E
                 _0x200006D:
00028c c011      	RJMP _0x200006C
                 _0x200006E:
00028d e220      	LDI  R18,LOW(32)
00028e ff07      	SBRS R16,7
00028f c00a      	RJMP _0x200006F
000290 e320      	LDI  R18,LOW(48)
                 _0x20000D3:
000291 6100      	ORI  R16,LOW(16)
000292 ff02      	SBRS R16,2
000293 c006      	RJMP _0x2000070
000294 7f0b      	ANDI R16,LOW(251)
000295 934a      	ST   -Y,R20
000296 d08c      	RCALL SUBOPT_0x8
000297 3050      	CPI  R21,0
000298 f009      	BREQ _0x2000071
000299 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
00029a d07b      	RCALL SUBOPT_0x6
00029b 3050      	CPI  R21,0
00029c f009      	BREQ _0x2000072
00029d 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
00029e 5031      	SUBI R19,LOW(1)
00029f 85a8      	LDD  R26,Y+8
0002a0 85b9      	LDD  R27,Y+8+1
0002a1 9712      	SBIW R26,2
0002a2 f008      	BRLO _0x200005F
0002a3 cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
0002a4 ff00      	SBRS R16,0
0002a5 c007      	RJMP _0x2000073
                 _0x2000074:
0002a6 3050      	CPI  R21,0
0002a7 f029      	BREQ _0x2000076
0002a8 5051      	SUBI R21,LOW(1)
0002a9 e2e0      	LDI  R30,LOW(32)
0002aa 93ea      	ST   -Y,R30
0002ab d077      	RCALL SUBOPT_0x8
0002ac cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
0002ad e010      	LDI  R17,LOW(0)
                 _0x2000021:
0002ae ceec      	RJMP _0x200001C
                 _0x200001E:
0002af 85ac      	LDD  R26,Y+12
0002b0 85bd      	LDD  R27,Y+12+1
0002b1 91ed      	LD   R30,X+
0002b2 91fd      	LD   R31,X+
0002b3 d086      	RCALL __LOADLOCR6
0002b4 9664      	ADIW R28,20
0002b5 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
0002b6 92ff      	PUSH R15
0002b7 2ef8      	MOV  R15,R24
0002b8 9726      	SBIW R28,6
0002b9 931a      	ST   -Y,R17
0002ba 930a      	ST   -Y,R16
0002bb 01de      	MOVW R26,R28
0002bc 9614      	ADIW R26,4
0002bd d083      	RCALL __ADDW2R15
0002be 018d      	MOVW R16,R26
0002bf e0e0      	LDI  R30,LOW(0)
0002c0 83ec      	STD  Y+4,R30
0002c1 83ed      	STD  Y+4+1,R30
0002c2 83ee      	STD  Y+6,R30
0002c3 83ef      	STD  Y+6+1,R30
0002c4 01de      	MOVW R26,R28
0002c5 9618      	ADIW R26,8
0002c6 d07a      	RCALL __ADDW2R15
0002c7 91ed      	LD   R30,X+
0002c8 91fd      	LD   R31,X+
0002c9 93fa      	ST   -Y,R31
0002ca 93ea      	ST   -Y,R30
0002cb 931a      	ST   -Y,R17
0002cc 930a      	ST   -Y,R16
0002cd e8e2      	LDI  R30,LOW(_put_usart_G100)
0002ce e0f1      	LDI  R31,HIGH(_put_usart_G100)
0002cf 93fa      	ST   -Y,R31
0002d0 93ea      	ST   -Y,R30
0002d1 01de      	MOVW R26,R28
0002d2 9618      	ADIW R26,8
0002d3 debc      	RCALL __print_G100
0002d4 8119      	LDD  R17,Y+1
0002d5 8108      	LDD  R16,Y+0
0002d6 9628      	ADIW R28,8
0002d7 90ff      	POP  R15
0002d8 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002d9 93ba      	ST   -Y,R27
0002da 93aa      	ST   -Y,R26
0002db 91a9          ld   r26,y+
0002dc 91b9          ld   r27,y+
0002dd 27ee          clr  r30
0002de 27ff          clr  r31
                 strlen0:
0002df 916d          ld   r22,x+
0002e0 2366          tst  r22
0002e1 f011          breq strlen1
0002e2 9631          adiw r30,1
0002e3 cffb          rjmp strlen0
                 strlen1:
0002e4 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002e5 93ba      	ST   -Y,R27
0002e6 93aa      	ST   -Y,R26
0002e7 27aa          clr  r26
0002e8 27bb          clr  r27
0002e9 91e9          ld   r30,y+
0002ea 91f9          ld   r31,y+
                 strlenf0:
0002eb 9005      	lpm  r0,z+
0002ec 2000          tst  r0
0002ed f011          breq strlenf1
0002ee 9611          adiw r26,1
0002ef cffb          rjmp strlenf0
                 strlenf1:
0002f0 01fd          movw r30,r26
0002f1 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
0002f2 93fa      	ST   -Y,R31
0002f3 93ea      	ST   -Y,R30
0002f4 e080      	LDI  R24,0
0002f5 dfc0      	RCALL _printf
0002f6 9622      	ADIW R28,2
0002f7 ce79      	RJMP _getchar
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
0002f8 e6a4      	LDI  R26,LOW(100)
0002f9 e0b0      	LDI  R27,0
0002fa d05b      	RCALL _delay_ms
0002fb e0e1      	LDI  R30,LOW(1)
0002fc e0f0      	LDI  R31,HIGH(1)
0002fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
0002fe 93fa      	ST   -Y,R31
0002ff 93ea      	ST   -Y,R30
000300 e080      	LDI  R24,0
000301 dfb4      	RCALL _printf
000302 9622      	ADIW R28,2
000303 e6a4      	LDI  R26,LOW(100)
000304 e0b0      	LDI  R27,0
000305 c050      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
000306 93fa      	ST   -Y,R31
000307 93ea      	ST   -Y,R30
000308 e080      	LDI  R24,0
000309 dfac      	RCALL _printf
00030a 9622      	ADIW R28,2
00030b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
00030c 2fe2      	MOV  R30,R18
00030d 27ff      	CLR  R31
00030e 2766      	CLR  R22
00030f 2777      	CLR  R23
000310 d040      	RCALL __PUTPARD1
000311 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000312 01de      	MOVW R26,R28
000313 0da7      	ADD  R26,R7
000314 1db8      	ADC  R27,R8
000315 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x6:
000316 932a      	ST   -Y,R18
000317 85ad      	LDD  R26,Y+13
000318 85be      	LDD  R27,Y+13+1
000319 85ef      	LDD  R30,Y+15
00031a 89f8      	LDD  R31,Y+15+1
00031b 9509      	ICALL
00031c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x7:
00031d 89e8      	LDD  R30,Y+16
00031e 89f9      	LDD  R31,Y+16+1
00031f 9734      	SBIW R30,4
000320 8be8      	STD  Y+16,R30
000321 8bf9      	STD  Y+16+1,R31
000322 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
000323 85ad      	LDD  R26,Y+13
000324 85be      	LDD  R27,Y+13+1
000325 85ef      	LDD  R30,Y+15
000326 89f8      	LDD  R31,Y+15+1
000327 9509      	ICALL
000328 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
000329 89a8      	LDD  R26,Y+16
00032a 89b9      	LDD  R27,Y+16+1
00032b 9614      	ADIW R26,4
00032c 91ed      	LD   R30,X+
00032d 91fd      	LD   R31,X+
00032e 83ee      	STD  Y+6,R30
00032f 83ff      	STD  Y+6+1,R31
000330 81ae      	LDD  R26,Y+6
000331 81bf      	LDD  R27,Y+6+1
000332 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000333 935a      	ST   -Y,R21
                 __SAVELOCR5:
000334 934a      	ST   -Y,R20
                 __SAVELOCR4:
000335 933a      	ST   -Y,R19
                 __SAVELOCR3:
000336 932a      	ST   -Y,R18
                 __SAVELOCR2:
000337 931a      	ST   -Y,R17
000338 930a      	ST   -Y,R16
000339 9508      	RET
                 
                 __LOADLOCR6:
00033a 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00033b 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00033c 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00033d 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00033e 8119      	LDD  R17,Y+1
00033f 8108      	LD   R16,Y
000340 9508      	RET
                 
                 __ADDW2R15:
000341 2400      	CLR  R0
000342 0daf      	ADD  R26,R15
000343 1db0      	ADC  R27,R0
000344 9508      	RET
                 
                 __ANEGW1:
000345 95f1      	NEG  R31
000346 95e1      	NEG  R30
000347 40f0      	SBCI R31,0
000348 9508      	RET
                 
                 __GETW1P:
000349 91ed      	LD   R30,X+
00034a 91fc      	LD   R31,X
00034b 9711      	SBIW R26,1
00034c 9508      	RET
                 
                 __GETW1PF:
00034d 9005      	LPM  R0,Z+
00034e 91f4      	LPM  R31,Z
00034f 2de0      	MOV  R30,R0
000350 9508      	RET
                 
                 __PUTPARD1:
000351 937a      	ST   -Y,R23
000352 936a      	ST   -Y,R22
000353 93fa      	ST   -Y,R31
000354 93ea      	ST   -Y,R30
000355 9508      	RET
                 
                 _delay_ms:
000356 9610      	adiw r26,0
000357 f039      	breq __delay_ms1
                 __delay_ms0:
000358 95a8      	wdr
                +
000359 ed80     +LDI R24 , LOW ( 0x7D0 )
00035a e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00035b 9701     +SBIW R24 , 1
00035c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00035d 9711      	sbiw r26,1
00035e f7c9      	brne __delay_ms0
                 __delay_ms1:
00035f 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

AT90USB1286 register use summary:
r0 :  14 r1 :   1 r2 :   0 r3 :   2 r4 :   2 r5 :   7 r6 :   7 r7 :   3 
r8 :   3 r9 :   4 r10:   4 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  34 r17:  25 r18:  29 r19:  12 r20:  13 r21:  21 r22:   7 r23:   3 
r24:  16 r25:   3 r26:  69 r27:  36 r28:  22 r29:   1 r30: 151 r31:  80 
x  :  25 y  : 130 z  :  13 
Registers used: 30 out of 35 (85.7%)

AT90USB1286 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   7 add   :   8 
adiw  :  22 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  19 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   2 brmi  :   0 brne  :  23 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   2 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  20 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   7 cpc   :   5 cpi   :  33 cpse  :   0 dec   :   1 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   0 inc   :   0 jmp   :  39 ld    :  23 ldd   :  56 
ldi   : 105 lds   :   3 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  27 
movw  :  13 mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   0 ori   :   6 out   :   7 pop   :   3 push  :   3 rcall :  55 
ret   :  23 reti  :   0 rjmp  :  59 rol   :   0 ror   :   0 sbc   :   1 
sbci  :   1 sbi   :   6 sbic  :   2 sbis  :   0 sbiw  :  19 sbr   :   0 
sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  47 std   :  30 sts   :   6 sub   :   1 subi  :  13 
swap  :   0 tst   :   3 wdr   :   1 
Instructions used: 50 out of 117 (42.7%)

AT90USB1286 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006c0   1590    138   1728  131072   1.3%
[.dseg] 0x000100 0x000900      0      0      0    8192   0.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 9 warnings
